// Copyright 2021-2024 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from type_description_interfaces/srv/GetTypeDescription.srv - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "type_description_interfaces/srv/get_type_description.h"

// rclUE
#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)

#include "Msgs/ROS2TDIKeyValue.h"
#include "Msgs/ROS2TDITypeDescription.h"
#include "Msgs/ROS2TDITypeSource.h"
#include "type_description_interfaces/msg/detail/key_value__functions.h"
#include "type_description_interfaces/msg/detail/type_source__functions.h"

// Generated
#include "ROS2TDIGetTypeDescription.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSTDIGetTypeDescriptionReq
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString TypeName;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString TypeHash;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    bool bIncludeTypeSources = false;

    FROSTDIGetTypeDescriptionReq()
    {
    }

    void SetFromROS2(const type_description_interfaces__srv__GetTypeDescription_Request& in_ros_data)
    {
        TypeName = UROS2Utils::StringROSToUE<rosidl_runtime_c__String>(in_ros_data.type_name);

        TypeHash = UROS2Utils::StringROSToUE<rosidl_runtime_c__String>(in_ros_data.type_hash);

        bIncludeTypeSources = in_ros_data.include_type_sources;
    }

    void SetROS2(type_description_interfaces__srv__GetTypeDescription_Request& out_ros_data) const
    {
        UROS2Utils::StringUEToROS(TypeName, out_ros_data.type_name);

        UROS2Utils::StringUEToROS(TypeHash, out_ros_data.type_hash);

        out_ros_data.include_type_sources = bIncludeTypeSources;
    }
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSTDIGetTypeDescriptionRes
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    bool bSuccessful = false;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString FailureReason;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FROSTDITypeDescription TypeDescription;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    TArray<FROSTDITypeSource> TypeSources;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    TArray<FROSTDIKeyValue> ExtraInformation;

    FROSTDIGetTypeDescriptionRes()
    {
    }

    void SetFromROS2(const type_description_interfaces__srv__GetTypeDescription_Response& in_ros_data)
    {
        bSuccessful = in_ros_data.successful;

        FailureReason = UROS2Utils::StringROSToUE<rosidl_runtime_c__String>(in_ros_data.failure_reason);

        TypeDescription.SetFromROS2(in_ros_data.type_description);

        UROS2Utils::SequenceROSToUEArray<type_description_interfaces__msg__TypeSource, FROSTDITypeSource>(
            in_ros_data.type_sources.data, TypeSources, in_ros_data.type_sources.size);

        UROS2Utils::SequenceROSToUEArray<type_description_interfaces__msg__KeyValue, FROSTDIKeyValue>(
            in_ros_data.extra_information.data, ExtraInformation, in_ros_data.extra_information.size);
    }

    void SetROS2(type_description_interfaces__srv__GetTypeDescription_Response& out_ros_data) const
    {
        out_ros_data.successful = bSuccessful;

        UROS2Utils::StringUEToROS(FailureReason, out_ros_data.failure_reason);

        TypeDescription.SetROS2(out_ros_data.type_description);

        if (out_ros_data.type_sources.data)
        {
            type_description_interfaces__msg__TypeSource__Sequence__fini(&out_ros_data.type_sources);
        }
        if (!type_description_interfaces__msg__TypeSource__Sequence__init(&out_ros_data.type_sources, TypeSources.Num()))
        {
            UE_LOG_WITH_INFO(LogTemp, Error, TEXT("failed to create array for field out_ros_data.type_sources  "));
        }
        UROS2Utils::ArrayUEToROSSequence<type_description_interfaces__msg__TypeSource, FROSTDITypeSource>(
            TypeSources, out_ros_data.type_sources.data, TypeSources.Num());

        if (out_ros_data.extra_information.data)
        {
            type_description_interfaces__msg__KeyValue__Sequence__fini(&out_ros_data.extra_information);
        }
        if (!type_description_interfaces__msg__KeyValue__Sequence__init(&out_ros_data.extra_information, ExtraInformation.Num()))
        {
            UE_LOG_WITH_INFO(LogTemp, Error, TEXT("failed to create array for field out_ros_data.extra_information  "));
        }
        UROS2Utils::ArrayUEToROSSequence<type_description_interfaces__msg__KeyValue, FROSTDIKeyValue>(
            ExtraInformation, out_ros_data.extra_information.data, ExtraInformation.Num());
    }
};

UCLASS()
class RCLUE_API UROS2TDIGetTypeDescriptionSrv : public UROS2GenericSrv
{
    GENERATED_BODY()

public:
    UFUNCTION(BlueprintCallable)
    virtual void Init() override;

    UFUNCTION(BlueprintCallable)
    virtual void Fini() override;

    virtual const rosidl_service_type_support_t* GetTypeSupport() const override;

    // used by client
    UFUNCTION(BlueprintCallable)
    void SetRequest(const FROSTDIGetTypeDescriptionReq& Request);

    // used by service
    UFUNCTION(BlueprintCallable)
    void GetRequest(FROSTDIGetTypeDescriptionReq& Request) const;

    // used by service
    UFUNCTION(BlueprintCallable)
    void SetResponse(const FROSTDIGetTypeDescriptionRes& Response);

    // used by client
    UFUNCTION(BlueprintCallable)
    void GetResponse(FROSTDIGetTypeDescriptionRes& Response) const;

    virtual void* GetRequest() override;
    virtual void* GetResponse() override;

private:
    virtual FString SrvRequestToString() const override;
    virtual FString SrvResponseToString() const override;

    type_description_interfaces__srv__GetTypeDescription_Request GetTypeDescription_req;
    type_description_interfaces__srv__GetTypeDescription_Response GetTypeDescription_res;
};
