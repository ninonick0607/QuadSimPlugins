// Copyright 2021-2024 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from type_description_interfaces/msg/FieldType.msg - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "type_description_interfaces/msg/field_type.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)

// Generated
#include "ROS2TDIFieldType.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSTDIFieldType
{
    GENERATED_BODY()

public:
    static constexpr uint8 FIELD_TYPE_NOT_SET = 0;
    static constexpr uint8 FIELD_TYPE_NESTED_TYPE = 1;
    static constexpr uint8 FIELD_TYPE_INT8 = 2;
    static constexpr uint8 FIELD_TYPE_UINT8 = 3;
    static constexpr uint8 FIELD_TYPE_INT16 = 4;
    static constexpr uint8 FIELD_TYPE_UINT16 = 5;
    static constexpr uint8 FIELD_TYPE_INT32 = 6;
    static constexpr uint8 FIELD_TYPE_UINT32 = 7;
    static constexpr uint8 FIELD_TYPE_INT64 = 8;
    static constexpr uint8 FIELD_TYPE_UINT64 = 9;
    static constexpr uint8 FIELD_TYPE_FLOAT = 10;
    static constexpr uint8 FIELD_TYPE_DOUBLE = 11;
    static constexpr uint8 FIELD_TYPE_LONG_DOUBLE = 12;
    static constexpr uint8 FIELD_TYPE_CHAR = 13;
    static constexpr uint8 FIELD_TYPE_WCHAR = 14;
    static constexpr uint8 FIELD_TYPE_BOOLEAN = 15;
    static constexpr uint8 FIELD_TYPE_BYTE = 16;
    static constexpr uint8 FIELD_TYPE_STRING = 17;
    static constexpr uint8 FIELD_TYPE_WSTRING = 18;
    static constexpr uint8 FIELD_TYPE_FIXED_STRING = 19;
    static constexpr uint8 FIELD_TYPE_FIXED_WSTRING = 20;
    static constexpr uint8 FIELD_TYPE_BOUNDED_STRING = 21;
    static constexpr uint8 FIELD_TYPE_BOUNDED_WSTRING = 22;
    static constexpr uint8 FIELD_TYPE_NESTED_TYPE_ARRAY = 49;
    static constexpr uint8 FIELD_TYPE_INT8_ARRAY = 50;
    static constexpr uint8 FIELD_TYPE_UINT8_ARRAY = 51;
    static constexpr uint8 FIELD_TYPE_INT16_ARRAY = 52;
    static constexpr uint8 FIELD_TYPE_UINT16_ARRAY = 53;
    static constexpr uint8 FIELD_TYPE_INT32_ARRAY = 54;
    static constexpr uint8 FIELD_TYPE_UINT32_ARRAY = 55;
    static constexpr uint8 FIELD_TYPE_INT64_ARRAY = 56;
    static constexpr uint8 FIELD_TYPE_UINT64_ARRAY = 57;
    static constexpr uint8 FIELD_TYPE_FLOAT_ARRAY = 58;
    static constexpr uint8 FIELD_TYPE_DOUBLE_ARRAY = 59;
    static constexpr uint8 FIELD_TYPE_LONG_DOUBLE_ARRAY = 60;
    static constexpr uint8 FIELD_TYPE_CHAR_ARRAY = 61;
    static constexpr uint8 FIELD_TYPE_WCHAR_ARRAY = 62;
    static constexpr uint8 FIELD_TYPE_BOOLEAN_ARRAY = 63;
    static constexpr uint8 FIELD_TYPE_BYTE_ARRAY = 64;
    static constexpr uint8 FIELD_TYPE_STRING_ARRAY = 65;
    static constexpr uint8 FIELD_TYPE_WSTRING_ARRAY = 66;
    static constexpr uint8 FIELD_TYPE_FIXED_STRING_ARRAY = 67;
    static constexpr uint8 FIELD_TYPE_FIXED_WSTRING_ARRAY = 68;
    static constexpr uint8 FIELD_TYPE_BOUNDED_STRING_ARRAY = 69;
    static constexpr uint8 FIELD_TYPE_BOUNDED_WSTRING_ARRAY = 70;
    static constexpr uint8 FIELD_TYPE_NESTED_TYPE_BOUNDED_SEQUENCE = 97;
    static constexpr uint8 FIELD_TYPE_INT8_BOUNDED_SEQUENCE = 98;
    static constexpr uint8 FIELD_TYPE_UINT8_BOUNDED_SEQUENCE = 99;
    static constexpr uint8 FIELD_TYPE_INT16_BOUNDED_SEQUENCE = 100;
    static constexpr uint8 FIELD_TYPE_UINT16_BOUNDED_SEQUENCE = 101;
    static constexpr uint8 FIELD_TYPE_INT32_BOUNDED_SEQUENCE = 102;
    static constexpr uint8 FIELD_TYPE_UINT32_BOUNDED_SEQUENCE = 103;
    static constexpr uint8 FIELD_TYPE_INT64_BOUNDED_SEQUENCE = 104;
    static constexpr uint8 FIELD_TYPE_UINT64_BOUNDED_SEQUENCE = 105;
    static constexpr uint8 FIELD_TYPE_FLOAT_BOUNDED_SEQUENCE = 106;
    static constexpr uint8 FIELD_TYPE_DOUBLE_BOUNDED_SEQUENCE = 107;
    static constexpr uint8 FIELD_TYPE_LONG_DOUBLE_BOUNDED_SEQUENCE = 108;
    static constexpr uint8 FIELD_TYPE_CHAR_BOUNDED_SEQUENCE = 109;
    static constexpr uint8 FIELD_TYPE_WCHAR_BOUNDED_SEQUENCE = 110;
    static constexpr uint8 FIELD_TYPE_BOOLEAN_BOUNDED_SEQUENCE = 111;
    static constexpr uint8 FIELD_TYPE_BYTE_BOUNDED_SEQUENCE = 112;
    static constexpr uint8 FIELD_TYPE_STRING_BOUNDED_SEQUENCE = 113;
    static constexpr uint8 FIELD_TYPE_WSTRING_BOUNDED_SEQUENCE = 114;
    static constexpr uint8 FIELD_TYPE_FIXED_STRING_BOUNDED_SEQUENCE = 115;
    static constexpr uint8 FIELD_TYPE_FIXED_WSTRING_BOUNDED_SEQUENCE = 116;
    static constexpr uint8 FIELD_TYPE_BOUNDED_STRING_BOUNDED_SEQUENCE = 117;
    static constexpr uint8 FIELD_TYPE_BOUNDED_WSTRING_BOUNDED_SEQUENCE = 118;
    static constexpr uint8 FIELD_TYPE_NESTED_TYPE_UNBOUNDED_SEQUENCE = 145;
    static constexpr uint8 FIELD_TYPE_INT8_UNBOUNDED_SEQUENCE = 146;
    static constexpr uint8 FIELD_TYPE_UINT8_UNBOUNDED_SEQUENCE = 147;
    static constexpr uint8 FIELD_TYPE_INT16_UNBOUNDED_SEQUENCE = 148;
    static constexpr uint8 FIELD_TYPE_UINT16_UNBOUNDED_SEQUENCE = 149;
    static constexpr uint8 FIELD_TYPE_INT32_UNBOUNDED_SEQUENCE = 150;
    static constexpr uint8 FIELD_TYPE_UINT32_UNBOUNDED_SEQUENCE = 151;
    static constexpr uint8 FIELD_TYPE_INT64_UNBOUNDED_SEQUENCE = 152;
    static constexpr uint8 FIELD_TYPE_UINT64_UNBOUNDED_SEQUENCE = 153;
    static constexpr uint8 FIELD_TYPE_FLOAT_UNBOUNDED_SEQUENCE = 154;
    static constexpr uint8 FIELD_TYPE_DOUBLE_UNBOUNDED_SEQUENCE = 155;
    static constexpr uint8 FIELD_TYPE_LONG_DOUBLE_UNBOUNDED_SEQUENCE = 156;
    static constexpr uint8 FIELD_TYPE_CHAR_UNBOUNDED_SEQUENCE = 157;
    static constexpr uint8 FIELD_TYPE_WCHAR_UNBOUNDED_SEQUENCE = 158;
    static constexpr uint8 FIELD_TYPE_BOOLEAN_UNBOUNDED_SEQUENCE = 159;
    static constexpr uint8 FIELD_TYPE_BYTE_UNBOUNDED_SEQUENCE = 160;
    static constexpr uint8 FIELD_TYPE_STRING_UNBOUNDED_SEQUENCE = 161;
    static constexpr uint8 FIELD_TYPE_WSTRING_UNBOUNDED_SEQUENCE = 162;
    static constexpr uint8 FIELD_TYPE_FIXED_STRING_UNBOUNDED_SEQUENCE = 163;
    static constexpr uint8 FIELD_TYPE_FIXED_WSTRING_UNBOUNDED_SEQUENCE = 164;
    static constexpr uint8 FIELD_TYPE_BOUNDED_STRING_UNBOUNDED_SEQUENCE = 165;
    static constexpr uint8 FIELD_TYPE_BOUNDED_WSTRING_UNBOUNDED_SEQUENCE = 166;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    uint8 TypeId = 0;

    UPROPERTY(EditAnywhere)
    uint64 Capacity = 0;

    UPROPERTY(EditAnywhere)
    uint64 StringCapacity = 0;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FString NestedTypeName;

    FROSTDIFieldType()
    {
    }

    void SetFromROS2(const type_description_interfaces__msg__FieldType& in_ros_data)
    {
        TypeId = in_ros_data.type_id;

        Capacity = in_ros_data.capacity;

        StringCapacity = in_ros_data.string_capacity;

        NestedTypeName = UROS2Utils::StringROSToUE<rosidl_runtime_c__String>(in_ros_data.nested_type_name);
    }

    void SetROS2(type_description_interfaces__msg__FieldType& out_ros_data) const
    {
        out_ros_data.type_id = TypeId;

        out_ros_data.capacity = Capacity;

        out_ros_data.string_capacity = StringCapacity;

        UROS2Utils::StringUEToROS(NestedTypeName, out_ros_data.nested_type_name);
    }
};

UCLASS()
class RCLUE_API UROS2TDIFieldTypeMsg : public UROS2GenericMsg
{
    GENERATED_BODY()

public:
    virtual void Init() override;
    virtual void Fini() override;

    virtual const rosidl_message_type_support_t* GetTypeSupport() const override;

    UFUNCTION(BlueprintCallable)
    void SetMsg(const FROSTDIFieldType& Input);

    UFUNCTION(BlueprintCallable)
    void GetMsg(FROSTDIFieldType& Output) const;

    virtual void* Get() override;

    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_NOT_SET()
    {
        return FROSTDIFieldType::FIELD_TYPE_NOT_SET;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_NESTED_TYPE()
    {
        return FROSTDIFieldType::FIELD_TYPE_NESTED_TYPE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT8()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT8;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT8()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT8;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT16()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT16;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT16()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT16;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT32()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT32;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT32()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT32;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT64()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT64;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT64()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT64;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FLOAT()
    {
        return FROSTDIFieldType::FIELD_TYPE_FLOAT;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_DOUBLE()
    {
        return FROSTDIFieldType::FIELD_TYPE_DOUBLE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_LONG_DOUBLE()
    {
        return FROSTDIFieldType::FIELD_TYPE_LONG_DOUBLE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_CHAR()
    {
        return FROSTDIFieldType::FIELD_TYPE_CHAR;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WCHAR()
    {
        return FROSTDIFieldType::FIELD_TYPE_WCHAR;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOOLEAN()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOOLEAN;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BYTE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BYTE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_STRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_STRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WSTRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_WSTRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_STRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_STRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_WSTRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_WSTRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_STRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_STRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_WSTRING()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_WSTRING;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_NESTED_TYPE_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_NESTED_TYPE_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT8_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT8_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT8_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT8_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT16_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT16_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT16_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT16_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT32_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT32_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT32_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT32_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT64_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT64_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT64_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT64_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FLOAT_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_FLOAT_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_DOUBLE_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_DOUBLE_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_LONG_DOUBLE_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_LONG_DOUBLE_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_CHAR_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_CHAR_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WCHAR_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_WCHAR_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOOLEAN_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOOLEAN_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BYTE_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_BYTE_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_STRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_STRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WSTRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_WSTRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_STRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_STRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_WSTRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_WSTRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_STRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_STRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_WSTRING_ARRAY()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_WSTRING_ARRAY;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_NESTED_TYPE_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_NESTED_TYPE_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT8_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT8_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT8_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT8_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT16_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT16_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT16_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT16_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT32_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT32_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT32_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT32_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT64_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT64_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT64_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT64_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FLOAT_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FLOAT_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_DOUBLE_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_DOUBLE_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_LONG_DOUBLE_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_LONG_DOUBLE_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_CHAR_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_CHAR_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WCHAR_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_WCHAR_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOOLEAN_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOOLEAN_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BYTE_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BYTE_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_STRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_STRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WSTRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_WSTRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_STRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_STRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_WSTRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_WSTRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_STRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_STRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_WSTRING_BOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_WSTRING_BOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_NESTED_TYPE_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_NESTED_TYPE_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT8_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT8_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT8_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT8_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT16_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT16_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT16_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT16_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT32_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT32_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT32_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT32_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_INT64_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_INT64_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_UINT64_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_UINT64_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FLOAT_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FLOAT_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_DOUBLE_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_DOUBLE_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_LONG_DOUBLE_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_LONG_DOUBLE_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_CHAR_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_CHAR_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WCHAR_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_WCHAR_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOOLEAN_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOOLEAN_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BYTE_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BYTE_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_STRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_STRING_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_WSTRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_WSTRING_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_STRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_STRING_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_FIXED_WSTRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_FIXED_WSTRING_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_STRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_STRING_UNBOUNDED_SEQUENCE;
    }
    UFUNCTION(BlueprintCallable)
    static uint8 CONST_FIELD_TYPE_BOUNDED_WSTRING_UNBOUNDED_SEQUENCE()
    {
        return FROSTDIFieldType::FIELD_TYPE_BOUNDED_WSTRING_UNBOUNDED_SEQUENCE;
    }

private:
    virtual FString MsgToString() const override;

    type_description_interfaces__msg__FieldType field_type_msg;
};
